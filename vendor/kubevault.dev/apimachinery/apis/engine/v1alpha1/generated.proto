/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package kubevault.dev.apimachinery.apis.engine.v1alpha1;

import "k8s.io/api/core/v1/generated.proto";
import "k8s.io/api/rbac/v1/generated.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";
import "kmodules.xyz/client-go/api/v1/generated.proto";
import "kmodules.xyz/custom-resources/apis/appcatalog/v1alpha1/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1alpha1";

// https://www.vaultproject.io/api/secret/aws/index.html#parameters-6
// AWSAccessKeyRequestSpec contains information to request for vault aws credential
message AWSAccessRequestConfiguration {
  // The ARN of the role to assume if credential_type on the Vault role is assumed_role.
  // Must match one of the allowed role ARNs in the Vault role. Optional if the Vault role
  // only allows a single AWS role ARN; required otherwise.
  optional string roleARN = 1;

  // If true, '/aws/sts' endpoint will be used to retrieve credential
  // Otherwise, '/aws/creds' endpoint will be used to retrieve credential
  optional bool useSTS = 2;
}

// https://www.vaultproject.io/api/secret/aws/index.html#configure-root-iam-credentials
// AWSConfiguration contains information to communicate with AWS
message AWSConfiguration {
  // Specifies the secret containing AWS access key ID and secret access key
  // secret.Data:
  // 	- access_key=<value>
  //  - secret_key=<value>
  optional string credentialSecret = 1;

  // Specifies the AWS region
  optional string region = 2;

  // Specifies a custom HTTP IAM enminidpoint to use
  optional string iamEndpoint = 3;

  // Specifies a custom HTTP STS endpoint to use
  optional string stsEndpoint = 4;

  // Number of max retries the client should use for recoverable errors.
  // The default (-1) falls back to the AWS SDK's default behavior
  optional int64 maxRetries = 5;

  optional LeaseConfig leaseConfig = 6;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=awsroles,singular=awsrole,categories={vault,appscode,all}
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
message AWSRole {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AWSRoleSpec spec = 2;

  optional RoleStatus status = 3;
}

message AWSRoleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of AWSRole objects
  repeated AWSRole items = 2;
}

// AWSRoleSpec contains connection information, AWS role info, etc
// More info: https://www.vaultproject.io/api/secret/aws/index.html#parameters-3
message AWSRoleSpec {
  // SecretEngineRef is the name of a Secret Engine
  optional k8s.io.api.core.v1.LocalObjectReference secretEngineRef = 1;

  // Specifies the type of credential to be used when retrieving credentials from the role
  optional string credentialType = 2;

  // Specifies the ARNs of the AWS roles this Vault role is allowed to assume.
  // Required when credential_type is assumed_role and prohibited otherwise
  repeated string roleARNs = 3;

  // Specifies the ARNs of the AWS managed policies to be attached to IAM users when they are requested.
  // Valid only when credential_type is iam_user. When credential_type is iam_user,
  // at least one of policy_arns or policy_document must be specified.
  repeated string policyARNs = 4;

  // The IAM policy document for the role. The behavior depends on the credential type.
  // With iam_user, the policy document will be attached to the IAM user generated and
  // augment the permissions the IAM user has. With assumed_role and federation_token,
  // the policy document will act as a filter on what the credentials can do.
  // +optional
  optional string policyDocument = 5;

  // Specifies the IAM policy in JSON format.
  // +optional
  // +kubebuilder:validation:EmbeddedResource
  // +kubebuilder:pruning:PreserveUnknownFields
  optional k8s.io.apimachinery.pkg.runtime.RawExtension policy = 6;

  // The default TTL for STS credentials. When a TTL is not specified when STS credentials are requested,
  // and a default TTL is specified on the role, then this default TTL will be used.
  // Valid only when credential_type is one of assumed_role or federation_token
  optional string defaultSTSTTL = 7;

  // The max allowed TTL for STS credentials (credentials TTL are capped to max_sts_ttl).
  // Valid only when credential_type is one of assumed_role or federation_token
  optional string maxSTSTTL = 8;
}

// AzureConfiguration contains information to communicate with Azure
message AzureConfiguration {
  // Specifies the secret name containing Azure credentials
  // secret.Data:
  // 	- subscription-id: <value>, The subscription id for the Azure Active Directory.
  // 	- tenant-id: <value>, The tenant id for the Azure Active Directory.
  // 	- client-id: <value>, The OAuth2 client id to connect to Azure.
  // 	- client-secret: <value>, The OAuth2 client secret to connect to Azure.
  optional string credentialSecret = 1;

  // The Azure environment.
  // If not specified, Vault will use Azure Public Cloud.
  // +optional
  optional string environment = 2;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=azureroles,singular=azurerole,categories={vault,appscode,all}
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
message AzureRole {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional AzureRoleSpec spec = 2;

  optional RoleStatus status = 3;
}

message AzureRoleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of AzureRole objects
  repeated AzureRole items = 2;
}

// AzureRoleSpec contains connection information, Azure role info, etc
// More info: https://www.vaultproject.io/api/secret/azure/index.html#create-update-role
message AzureRoleSpec {
  // SecretEngineRef is the name of a Secret Engine
  optional k8s.io.api.core.v1.LocalObjectReference secretEngineRef = 1;

  // List of Azure roles to be assigned to the generated service principal.
  // The array must be in JSON format, properly escaped as a string
  optional string azureRoles = 2;

  // Application Object ID for an existing service principal
  // that will be used instead of creating dynamic service principals.
  // If present, azure_roles will be ignored.
  optional string applicationObjectID = 3;

  // Specifies the default TTL for service principals generated using this role.
  // Accepts time suffixed strings ("1h") or an integer number of seconds.
  // Defaults to the system/engine default TTL time.
  optional string ttl = 4;

  // Specifies the maximum TTL for service principals
  // generated using this role. Accepts time suffixed strings ("1h")
  // or an integer number of seconds. Defaults to the system/engine max TTL time.
  optional string maxTTL = 5;
}

// ElasticsearchConfiguration defines a Elasticsearch app configuration.
// https://www.vaultproject.io/api-docs/secret/databases/elasticdb
// TODO: Fill in the fields
message ElasticsearchConfiguration {
  // Specifies the Elasticsearch database appbinding reference
  optional kmodules.xyz.custom_resources.apis.appcatalog.v1alpha1.AppReference databaseRef = 1;

  // List of the roles allowed to use this connection.
  // Defaults to empty (no roles), if contains a "*" any role can use this connection.
  repeated string allowedRoles = 2;

  // Specifies the name of the plugin to use for this connection.
  // Default plugin:
  //  - for elasticsearch: elasticsearch-database-plugin
  optional string pluginName = 3;

  // The URL for Elasticsearch's API ("http://localhost:9200").
  // +kubebuilder:validation:Required
  optional string url = 4;

  // The username to be used in the connection URL ("vault").
  // +kubebuilder:validation:Required
  optional string username = 5;

  // The password to be used in the connection URL ("pa55w0rd").
  // +kubebuilder:validation:Required
  optional string password = 6;

  // The path to a PEM-encoded CA cert file to use to verify the Elasticsearch server's identity.
  optional string caCert = 7;

  // The path to a directory of PEM-encoded CA cert files to use to verify the Elasticsearch server's identity.
  optional string caPath = 8;

  // The path to the certificate for the Elasticsearch client to present for communication.
  optional string clientCert = 9;

  // The path to the key for the Elasticsearch client to use for communication.
  optional string clientKey = 10;

  // This, if set, is used to set the SNI host when connecting via 1TLS.
  optional string tlsServerName = 11;

  // Not recommended. Default to false. Can be set to true to disable SSL verification.
  // +kubebuilder:default:=false
  optional bool insecure = 12;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=elasticsearchroles,singular=elasticsearchrole,categories={vault,appscode,all}
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
message ElasticsearchRole {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional ElasticsearchRoleSpec spec = 2;

  optional RoleStatus status = 3;
}

message ElasticsearchRoleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of ElasticsearchRole objects
  repeated ElasticsearchRole items = 2;
}

// ElasticsearchRoleSpec contains connection information, Elasticsearch role info etc
message ElasticsearchRoleSpec {
  // SecretEngineRef is the name of a Secret Engine
  optional k8s.io.api.core.v1.LocalObjectReference secretEngineRef = 1;

  // Specifies the TTL for the leases associated with this role.
  // Accepts time suffixed strings ("1h") or an integer number of seconds.
  // Defaults to system/engine default TTL time
  optional string defaultTTL = 2;

  // Specifies the maximum TTL for the leases associated with this role.
  // Accepts time suffixed strings ("1h") or an integer number of seconds.
  // Defaults to system/engine default TTL time.
  optional string maxTTL = 3;

  // https://www.vaultproject.io/api/secret/databases/elasticdb.html#creation_statements
  // Specifies the database statements executed to create and configure a user.
  repeated string creationStatements = 4;

  // https://www.vaultproject.io/api/secret/databases/elasticdb.html#revocation_statements
  // Specifies the database statements to be executed to revoke a user.
  repeated string revocationStatements = 5;
}

// GCPAccessRequestConfiguration contains information to request for vault gcp credentials
message GCPAccessRequestConfiguration {
  // Specifies the algorithm used to generate key.
  // Defaults to 2k RSA key.
  // Accepted values: KEY_ALG_UNSPECIFIED, KEY_ALG_RSA_1024, KEY_ALG_RSA_2048
  // +optional
  optional string keyAlgorithm = 1;

  // Specifies the private key type to generate.
  // Defaults to JSON credentials file
  // Accepted values: TYPE_UNSPECIFIED, TYPE_PKCS12_FILE, TYPE_GOOGLE_CREDENTIALS_FILE
  // +optional
  optional string keyType = 2;
}

// https://www.vaultproject.io/api/secret/gcp/index.html#write-config
// GCPConfiguration contains information to communicate with GCP
message GCPConfiguration {
  // Specifies the secret containing GCP credentials
  // secret.Data:
  // 	- sa.json
  optional string credentialSecret = 1;

  // Specifies default config TTL for long-lived credentials
  // (i.e. service account keys).
  // +optional
  optional string ttl = 2;

  // Specifies the maximum config TTL for long-lived
  // credentials (i.e. service account keys).
  // +optional
  optional string maxTTL = 3;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=gcproles,singular=gcprole,categories={vault,appscode,all}
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
message GCPRole {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional GCPRoleSpec spec = 2;

  optional RoleStatus status = 3;
}

message GCPRoleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of GCPRole objects
  repeated GCPRole items = 2;
}

// GCPRoleSpec contains connection information, GCP role info, etc
// More info: https://www.vaultproject.io/api/secret/gcp/index.html#parameters
message GCPRoleSpec {
  // SecretEngineRef is the name of a Secret Engine
  optional k8s.io.api.core.v1.LocalObjectReference secretEngineRef = 1;

  // Path defines the path of the Google Cloud secret engine
  // default: gcp
  // More info: https://www.vaultproject.io/docs/auth/gcp.html#via-the-cli-helper
  // +optional
  optional string path = 2;

  // Specifies the type of secret generated for this role set
  optional string secretType = 3;

  // Name of the GCP project that this roleset's service account will belong to.
  // Cannot be updated.
  optional string project = 4;

  // Bindings configuration string (expects HCL or JSON format in raw
  // or base64-encoded string)
  optional string bindings = 5;

  // List of OAuth scopes to assign to access_token secrets generated
  // under this role set (access_token role sets only)
  // +optional
  repeated string tokenScopes = 6;
}

// KVConfiguration defines a Key-Value engine configuration
// TODO: fill in doc links
message KVConfiguration {
  // The version of the KV engine to enable. Defaults to "1", can be either "1" or "2"
  optional int64 version = 1;

  // The maximum number of versions to keep for any given key. Defaults to 0, which indicates that the Vault default (10) should be
  // used.
  optional int64 maxVersions = 2;

  // If true, then all operations on the KV store require the cas (Compare-and-Swap) parameter to be set.
  // https://www.vaultproject.io/api-docs/secret/kv/kv-v2#cas_required
  // https://www.vaultproject.io/docs/secrets/kv/kv-v2#usage
  optional bool casRequired = 3;

  // If set, keys will be automatically deleted after this length of time. Accepts a Go duration format
  // string.
  // https://golang.org/pkg/time/#ParseDuration
  optional string deleteVersionsAfter = 4;
}

// Lease contains lease info
message Lease {
  // lease id
  optional string id = 1;

  // lease duration
  optional k8s.io.apimachinery.pkg.apis.meta.v1.Duration duration = 2;

  // Specifies whether this lease is renewable
  optional bool renewable = 3;
}

// https://www.vaultproject.io/api/secret/aws/index.html#configure-lease
// LeaseConfig contains lease configuration
message LeaseConfig {
  // Specifies the lease value provided as a string duration with time suffix.
  // "h" (hour) is the largest suffix.
  optional string lease = 1;

  // Specifies the maximum lease value provided as a string duration with time suffix.
  // "h" (hour) is the largest suffix
  optional string leaseMax = 2;
}

// MongoDBConfiguration defines a MongoDB app configuration.
// https://www.vaultproject.io/api/secret/databases/index.html
// https://www.vaultproject.io/api/secret/databases/mongodb.html#configure-connection
message MongoDBConfiguration {
  // Specifies the database appbinding reference
  optional kmodules.xyz.custom_resources.apis.appcatalog.v1alpha1.AppReference databaseRef = 1;

  // Specifies the name of the plugin to use for this connection.
  // Default plugin:
  //  - for mongodb: mongodb-database-plugin
  optional string pluginName = 2;

  // List of the roles allowed to use this connection.
  // Defaults to empty (no roles), if contains a "*" any role can use this connection.
  repeated string allowedRoles = 3;

  // Specifies the MongoDB write concern. This is set for the entirety
  // of the session, maintained for the lifecycle of the plugin process.
  optional string writeConcern = 4;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=mongodbroles,singular=mongodbrole,categories={vault,appscode,all}
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
message MongoDBRole {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MongoDBRoleSpec spec = 2;

  optional RoleStatus status = 3;
}

message MongoDBRoleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MongoDBRole objects
  repeated MongoDBRole items = 2;
}

// MongoDBRoleSpec contains connection information, Mongodb role info etc
message MongoDBRoleSpec {
  // SecretEngineRef is the name of a Secret Engine
  optional k8s.io.api.core.v1.LocalObjectReference secretEngineRef = 1;

  // Specifies the TTL for the leases associated with this role.
  // Accepts time suffixed strings ("1h") or an integer number of seconds.
  // Defaults to system/engine default TTL time
  optional string defaultTTL = 2;

  // Specifies the maximum TTL for the leases associated with this role.
  // Accepts time suffixed strings ("1h") or an integer number of seconds.
  // Defaults to system/engine default TTL time.
  optional string maxTTL = 3;

  // https://www.vaultproject.io/api/secret/databases/Mongodb-maria.html#creation_statements
  // Specifies the database statements executed to create and configure a user.
  repeated string creationStatements = 4;

  // https://www.vaultproject.io/api/secret/databases/Mongodb-maria.html#revocation_statements
  // Specifies the database statements to be executed to revoke a user.
  repeated string revocationStatements = 5;
}

// MySQLConfiguration defines a MySQL app configuration.
// https://www.vaultproject.io/api/secret/databases/index.html
// https://www.vaultproject.io/api/secret/databases/mysql-maria.html#configure-connection
message MySQLConfiguration {
  // DatabaseRef refers to a MySQL/MariaDB database AppBinding in any namespace
  optional kmodules.xyz.custom_resources.apis.appcatalog.v1alpha1.AppReference databaseRef = 1;

  // Specifies the name of the plugin to use for this connection.
  // Default plugin:
  //  - for mysql: mysql-database-plugin
  optional string pluginName = 2;

  // List of the roles allowed to use this connection.
  // Defaults to empty (no roles), if contains a "*" any role can use this connection.
  repeated string allowedRoles = 3;

  // Specifies the maximum number of open connections to the database.
  optional int64 maxOpenConnections = 4;

  // Specifies the maximum number of idle connections to the database.
  // A zero uses the value of max_open_connections and a negative value disables idle connections.
  // If larger than max_open_connections it will be reduced to be equal.
  optional int64 maxIdleConnections = 5;

  // Specifies the maximum amount of time a connection may be reused.
  // If <= 0s connections are reused forever.
  optional string maxConnectionLifetime = 6;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=mysqlroles,singular=mysqlrole,categories={vault,appscode,all}
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
message MySQLRole {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional MySQLRoleSpec spec = 2;

  optional RoleStatus status = 3;
}

message MySQLRoleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of MySQLRole objects
  repeated MySQLRole items = 2;
}

// MySQLRoleSpec contains connection information, mysql role info etc
message MySQLRoleSpec {
  // SecretEngineRef is the name of a Secret Engine
  optional k8s.io.api.core.v1.LocalObjectReference secretEngineRef = 1;

  // Specifies the TTL for the leases associated with this role.
  // Accepts time suffixed strings ("1h") or an integer number of seconds.
  // Defaults to system/engine default TTL time
  optional string defaultTTL = 2;

  // Specifies the maximum TTL for the leases associated with this role.
  // Accepts time suffixed strings ("1h") or an integer number of seconds.
  // Defaults to system/engine default TTL time.
  optional string maxTTL = 3;

  // https://www.vaultproject.io/api/secret/databases/mysql-maria.html#creation_statements
  // Specifies the database statements executed to create and configure a user.
  repeated string creationStatements = 4;

  // https://www.vaultproject.io/api/secret/databases/mysql-maria.html#revocation_statements
  // Specifies the database statements to be executed to revoke a user.
  repeated string revocationStatements = 5;
}

// PostgresConfiguration defines a PostgreSQL app configuration.
// https://www.vaultproject.io/api/secret/databases/index.html
// https://www.vaultproject.io/api/secret/databases/postgresql.html#configure-connection
message PostgresConfiguration {
  // Specifies the Postgres database appbinding reference
  optional kmodules.xyz.custom_resources.apis.appcatalog.v1alpha1.AppReference databaseRef = 1;

  // Specifies the name of the plugin to use for this connection.
  // Default plugin:
  // 	- for postgres: postgresql-database-plugin
  optional string pluginName = 2;

  // List of the roles allowed to use this connection.
  // Defaults to empty (no roles), if contains a "*" any role can use this connection.
  repeated string allowedRoles = 3;

  // Specifies the maximum number of open connections to the database.
  optional int64 maxOpenConnections = 4;

  // Specifies the maximum number of idle connections to the database.
  // A zero uses the value of max_open_connections and a negative value disables idle connections.
  // If larger than max_open_connections it will be reduced to be equal.
  optional int64 maxIdleConnections = 5;

  // Specifies the maximum amount of time a connection may be reused.
  // If <= 0s connections are reused forever.
  optional string maxConnectionLifetime = 6;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=postgresroles,singular=postgresrole,categories={vault,appscode,all}
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
message PostgresRole {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional PostgresRoleSpec spec = 2;

  optional RoleStatus status = 3;
}

message PostgresRoleList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of PostgresRole objects
  repeated PostgresRole items = 2;
}

// PostgresRoleSpec contains connection information, postgres role info etc
message PostgresRoleSpec {
  // SecretEngineRef is the name of a Secret Engine
  optional k8s.io.api.core.v1.LocalObjectReference secretEngineRef = 1;

  // Specifies the TTL for the leases associated with this role.
  // Accepts time suffixed strings ("1h") or an integer number of seconds.
  // Defaults to system/engine default TTL time
  optional string defaultTTL = 2;

  // Specifies the maximum TTL for the leases associated with this role.
  // Accepts time suffixed strings ("1h") or an integer number of seconds.
  // Defaults to system/engine default TTL time.
  optional string maxTTL = 3;

  // https://www.vaultproject.io/api/secret/databases/postgresql.html#creation_statements
  // Specifies the database statements executed to create and configure a user.
  repeated string creationStatements = 4;

  // https://www.vaultproject.io/api/secret/databases/postgresql.html#revocation_statements
  // Specifies the database statements to be executed to revoke a user.
  repeated string revocationStatements = 5;

  // https://www.vaultproject.io/api/secret/databases/postgresql.html#rollback_statements
  // Specifies the database statements to be executed rollback a create operation in the event of an error.
  repeated string rollbackStatements = 6;

  // https://www.vaultproject.io/api/secret/databases/postgresql.html#renew_statements
  // Specifies the database statements to be executed to renew a user.
  repeated string renewStatements = 7;
}

message RoleStatus {
  optional string phase = 1;

  // ObservedGeneration is the most recent generation observed for this MySQLRole. It corresponds to the
  // MySQLRole's generation, which is updated on mutation by the API Server.
  optional int64 observedGeneration = 2;

  // Represents the latest available observations of a MySQLRole current state.
  repeated kmodules.xyz.client_go.api.v1.Condition conditions = 3;

  optional kmodules.xyz.client_go.api.v1.ObjectReference policyRef = 4;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=secretaccessrequests,singular=secretaccessrequest,categories={vault,appscode,all}
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
message SecretAccessRequest {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional SecretAccessRequestSpec spec = 2;

  optional SecretAccessRequestStatus status = 3;
}

// SecretAccessRequestConfiguration contains information to request for database credential
message SecretAccessRequestConfiguration {
  // +optional
  optional AWSAccessRequestConfiguration aws = 1;

  optional GCPAccessRequestConfiguration gcp = 2;
}

message SecretAccessRequestList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of SecretAccessRequest objects
  repeated SecretAccessRequest items = 2;
}

// SecretAccessRequestSpec contains information to request for database credential
message SecretAccessRequestSpec {
  // Contains vault database role info
  optional k8s.io.api.core.v1.TypedLocalObjectReference roleRef = 1;

  repeated k8s.io.api.rbac.v1.Subject subjects = 2;

  // Specifies the TTL for the leases associated with this role.
  // Accepts time suffixed strings ("1h") or an integer number of seconds.
  // Defaults to roles default TTL time
  optional string ttl = 3;

  optional SecretAccessRequestConfiguration secretAccessRequestConfiguration = 4;
}

message SecretAccessRequestStatus {
  // Specifies the phase of SecretAccessRequest object
  optional string phase = 1;

  // Conditions applied to the request, such as approval or denial.
  // +optional
  repeated kmodules.xyz.client_go.api.v1.Condition conditions = 2;

  // Contains lease info
  optional Lease lease = 3;

  // observedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 4;

  // Name of the secret containing secret engine role credentials
  optional kmodules.xyz.client_go.api.v1.ObjectReference secret = 5;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=secretengines,singular=secretengine,categories={vault,appscode,all}
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
message SecretEngine {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional SecretEngineSpec spec = 2;

  optional SecretEngineStatus status = 3;
}

message SecretEngineConfiguration {
  optional AWSConfiguration aws = 1;

  optional AzureConfiguration azure = 2;

  optional GCPConfiguration gcp = 3;

  optional PostgresConfiguration postgres = 4;

  optional MongoDBConfiguration mongodb = 5;

  optional MySQLConfiguration mysql = 6;

  optional KVConfiguration kv = 7;

  optional ElasticsearchConfiguration elasticsearch = 8;
}

message SecretEngineList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated SecretEngine items = 2;
}

message SecretEngineSpec {
  optional kmodules.xyz.client_go.api.v1.ObjectReference vaultRef = 1;

  optional SecretEngineConfiguration secretEngineConfiguration = 2;
}

message SecretEngineStatus {
  optional string phase = 1;

  optional int64 observedGeneration = 2;

  repeated kmodules.xyz.client_go.api.v1.Condition conditions = 3;

  // Path defines the path used to enable this secret engine
  // Visible to user but immutable
  optional string path = 4;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=secretrolebindings,singular=secretrolebinding,categories={vault,appscode,all}
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
message SecretRoleBinding {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional SecretRoleBindingSpec spec = 2;

  optional SecretRoleBindingStatus status = 3;
}

message SecretRoleBindingList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  // Items is a list of SecretRoleBinding objects
  repeated SecretRoleBinding items = 2;
}

// SecretRoleBindingSpec contains information to request for database credential
message SecretRoleBindingSpec {
  repeated k8s.io.api.core.v1.TypedLocalObjectReference roles = 1;

  repeated k8s.io.api.rbac.v1.Subject subjects = 2;
}

message SecretRoleBindingStatus {
  // Specifies the phase of SecretRoleBinding object
  optional string phase = 1;

  // Conditions applied to the request, such as approval or denial.
  // +optional
  repeated kmodules.xyz.client_go.api.v1.Condition conditions = 2;

  // Contains lease info
  optional Lease lease = 3;

  // observedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 4;

  optional kmodules.xyz.client_go.api.v1.ObjectReference policyRef = 5;

  optional kmodules.xyz.client_go.api.v1.ObjectReference policyBindingRef = 6;
}

